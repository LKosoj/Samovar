<html>
<head>
<meta charset='utf-8'>
<link rel="shortcut icon" href="/favicon.ico" type="image/x-icon"/>
<title>Самовар</title>

<link rel="stylesheet" href="/style.css">

<script>
function openTab(evt, tabName) {
    var i, tabcontent, tablinks;
    tabcontent = document.getElementsByClassName("tabcontent");
    for (i = 0; i < tabcontent.length; i++) {
        tabcontent[i].style.display = "none";
    }
    tablinks = document.getElementsByClassName("tablinks");
    for (i = 0; i < tablinks.length; i++) {
        tablinks[i].className = tablinks[i].className.replace(" active", "");
    }
    document.getElementById(tabName).style.display = "block";
    evt.currentTarget.className += " active";
  return 0;
}

function set_program(){
var server = '/program';
request = new XMLHttpRequest();
request.onreadystatechange = function() {
if (this.readyState == 4 && this.status == 200) {
var myObj = this.responseText;
if (myObj != "OK") {
  document.getElementById('WProgram').value = myObj;
  alert( "Ok" );
}
}
};
request.open('POST', server, false);
let formData = new FormData(document.forms.setupform);
request.send(formData);
if(request.status != 200) {
alert( request.status + ': ' + request.statusText );
}
return 0;
};

HTMLElement.prototype.serialize = function(){
    var obj = {};
    var elements = this.querySelectorAll( "input[type='text'], input[type='color'], input[type='checkbox'], select" );
    for( var i = 0; i < elements.length; ++i ) {
        var element = elements[i];
        var name = element.name;
        var value = element.value;
        if (element.type == 'checkbox') value = element.checked;

        if( name ) {
            obj[ name ] = value;
        }
    }
    return JSON.stringify( obj );
}

function loadFile(e) {
	var file = e;
	var reader = new FileReader();
	reader.onload = function () {
		var data = JSON.parse(reader.result);
		mapJson(data);
	};
	reader.readAsText(file, "UTF-8");
}

function mapJson (data){
var inputs = Array.prototype.slice.call(document.querySelectorAll('form input, form select'));

Object.keys(data).map(function (dataItem) {
  inputs.map(function (inputItem) {
    if (inputItem.name === dataItem && inputItem.type == 'checkbox') {inputItem.checked = data[dataItem]; return true;}
    return (inputItem.name === dataItem) ? (inputItem.value = data[dataItem]) : false;
  });
});}

function SaveFormToFile(form) {
  var filename, text;
  filename = 'samovarbackup.txt';
//  text = getJson(document.getElementById('setupform'));
  text = document.querySelector("form").serialize();

  var pom = document.createElement('a');
  pom.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));
  pom.setAttribute('download', filename);

  pom.style.display = 'none';
  document.body.appendChild(pom);

  pom.click();

  document.body.removeChild(pom);
}
</script>
</head>

<body>
<form action='/save' method="post" name="setupform" id="setupform">
<h1>Настройки</h1>
<div class="tab">
  <input type='button' class="tablinks active" onclick="openTab(event, 'Main');" value="Основные">
  <input type='button' class="tablinks" onclick="openTab(event, 'Temp');" value="Температура">
  <input type='button' class="tablinks" onclick="openTab(event, 'Pump');" value="Насос">
  <input type='button' class="tablinks" onclick="openTab(event, 'Other');" value="Прочие">
</div>
<div id="Main" class="tabcontent" style="display: block;">
<h2>
<input id='usepressure' type='checkbox' name='usepressure' value='usepressure' %Checked%>
<label for='usepressure'>Использовать корректировку давления</label>
</h2>
<div>
<h2>
<input id='useautospeed' type='checkbox' name='useautospeed' value='useautospeed' %UASChecked%>
<label for='useautospeed' class="tooltip">Использовать корректировку скорости насоса<span class="tooltiptext">для снижения скорости отбора при повышении температуры по пару</span></label>
</h2>
<h2>Процент корректировки: <input name='autospeed' type='text' value='%autospeed%'>&#37;</h2>
</div>
<h2>Программа отбора:</h2> <textarea cols="40" rows="15" id='WProgram' name='WProgram'>%WProgram%</textarea>
<div class='dvcs'>
<p><span>Параметры программы отбора: Тип отбора;Объем отбора (мл);Скорость отбора (л/ч);Номер емкости для отбора;Температура отбора;Напряжение отбора</span></p>
<p><span>Пример программы отбора (H - головы (Heads), B - тело (Body), P - пауза (Pause), T - хвост (Tail).</span></p>
<p><span>Температура отбора = 0 - автоматический режим. Температура отбора < 10&#176C - плюс к предыдущей температуре, иначе отбор при заданной температуре</span></p>
<p><span>H;100;0.1;1;0.00;120</span></p>
<p><span>P;120;0.00;0;0.00;140</span></p>
<p><span>B;5000;0.75;2;0.00;90</span></p>
</div>
<div style="margin: 0 auto; width: 200px;">
<input id='setprogram' type='button' name='setprogram' value='Установить программу' onclick='set_program();'>
</div>
</div>

<div id="Temp" class="tabcontent">
<div style="color: %SteamColor%;">
<h2>
<div>
Адрес датчика пара перед дефлегматором
<select name="SteamAddr">
%SteamAddr%
</select>
</div>
</h2>
<h2>Корректировка датчика пара перед дефлегматором: <input name='DeltaSteamTemp' type='text' value='%DeltaSteamTemp%'>&#176C</h2>
<h2>Уставка датчика пара перед дефлегматором: <input name='SetSteamTemp' type='text' value='%SetSteamTemp%'>&#176C</h2>
<h2>Задержка отбора при выходе Т пара за уставку: <input name='SteamDelay' type='text' value='%SteamDelay%'> сек</h2>
</div>
<div style="color: %PipeColor%;">
<h2>
<div>
Адрес датчика в царге
<select name="PipeAddr">
%PipeAddr%
</select>
</div>
</h2>
<h2>Корректировка датчика в царге на 2/3 колонны: <input name='DeltaPipeTemp' type='text' value='%DeltaPipeTemp%'>&#176C</h2>
<h2>Уставка датчика в царге на 2/3 колонны: <input name='SetPipeTemp' type='text' value='%SetPipeTemp%'>&#176C</h2>
<h2>Задержка отбора при выходе Т в царге за уставку: <input name='PipeDelay' type='text' value='%PipeDelay%'> сек</h2>
</div>
<div style="color: %WaterColor%;">
<h2>
<div>
Адрес датчика воды
<select name="WaterAddr">
%WaterAddr%
</select>
</div>
</h2>
<h2>Корректировка датчика воды: <input name='DeltaWaterTemp' type='text' value='%DeltaWaterTemp%'>&#176C</h2>
<h2>Уставка датчика воды: <input name='SetWaterTemp' type='text' value='%SetWaterTemp%'>&#176C</h2>
<h2>Задержка отбора при выходе Т воды за уставку: <input name='WaterDelay' type='text' value='%WaterDelay%'> сек</h2>
</div>
<div style="color: %TankColor%;">
<h2>
<div>
Адрес датчика в кубе
<select name="TankAddr">
%TankAddr%
</select>
</div>
</h2>
<h2>Корректировка датчика в кубе: <input name='DeltaTankTemp' type='text' value='%DeltaTankTemp%'>&#176C</h2>
<h2>Уставка датчика в кубе: <input name='SetTankTemp' type='text' value='%SetTankTemp%'>&#176C</h2>
<h2>Задержка отбора при выходе Т в кубе за уставку: <input name='TankDelay' type='text' value='%TankDelay%'> сек</h2>
</div>
</div>

<div id="Pump" class="tabcontent">
<h2>Количество шагов шагового двигателя: <input name='StepperStepMl' type='text' value='%StepperStepMl%'> /мл.</h2>
<div style="margin: 0 auto; width: 200px;">
<input id='setstvolume' type='button' name='return' value='Калибровка насоса' onclick='javascript:location.href="/calibrate.htm"'>
</div>
</div>

<div id="Other" class="tabcontent">
<h2>Токен Blynk: <input name='blynkauth' type='text' size="32" style="width: 22em;" value='%blynkauth%'></h2>
<h2>Тайм-зона: <input name='TimeZone' type='text' value='%TimeZone%'></h2>
<h2>Сопротивление тэна для расчета мощности: <input name='HeaterR' type='text' value='%HeaterR%'> Ом</h2>
<h2>Периодичность записи данных в лог: <input name='LogPeriod' type='text' value='%LogPeriod%'> сек</h2>
<h2><p>Цвета для температур:</p>
<div>
    <input type="color" id="SteamColor" name="SteamColor" value="%SteamColor%">
    <label for="SteamColor">Температура пара</label>
</div>
<div>
    <input type="color" id="PipeColor" name="PipeColor" value="%PipeColor%">
    <label for="PipeColor">Температура датчика в царге</label>
</div>
<div>
    <input type="color" id="WaterColor" name="WaterColor" value="%WaterColor%">
    <label for="WaterColor">Температура воды</label>
</div>
<div>
    <input type="color" id="TankColor" name="TankColor" value="%TankColor%">
    <label for="TankColor">Температура датчика в кубе</label>
</div>
</h2>
<p><a href="https://www.w3schools.com/colors/colors_picker.asp">цвета можно подобрать тут</a></p>
<h2>Настройки уровней для реле
<div>
Реле 1
<select name="rele1">
  <option value="0" %RAL%>LOW</option>
  <option value="1" %RAH%>HIGHT</option>
</select>
</div>
<div>
Реле 2
<select name="rele2">
  <option value="0" %RBL%>LOW</option>
  <option value="1" %RBH%>HIGHT</option>
</select>
</div>
<div>
Реле 3
<select name="rele3">
  <option value="0" %RCL%>LOW</option>
  <option value="1" %RCH%>HIGHT</option>
</select>
</div>
<div>
Реле 4
<select name="rele4">
  <option value="0" %RDL%>LOW</option>
  <option value="1" %RDH%>HIGHT</option>
</select>
</div>
</h2>
<div style="margin: 0 auto; width: 200px;">
<input id='saveform' type='button' name='saveform' value='Сохранить настройки' onclick='SaveFormToFile(this);'>
<div>
Восстановить настройки <input type="file" id="fileToLoad" accept="text/plain" onchange="loadFile(this.files[0])"/>
</div>
</div>
</div>
<div style="margin: 0 auto; width: 668px;">
<input id='save' type='submit' name='save' value='Сохранить'>
<input id='return' type='button' name='return' value='На главную' onclick='javascript:location.href="/index.htm"'>
<input id='edit' type='button' name='edit' value='Редактор' onclick='javascript:location.href="/edit"'>
</div>
</form>
</body>
</html>