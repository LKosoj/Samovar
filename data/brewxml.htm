<html>
<head>
<meta charset='utf-8'>
<meta http-equiv="Cache-Control" content="no-cache">

<link rel="shortcut icon" href="/favicon.ico" type="image/x-icon"/>
<title>Самовар</title>

<link rel="stylesheet" href="/style.css">

<script>

function loadFile(e) {
	var file = e;
	var reader = new FileReader();
	reader.onload = function () {
		get_brew_info(reader.result);
	};
	reader.readAsText(file, "UTF-8");
}

function parseXml(xml, arrayTags) {
    let dom = null;
    if (window.DOMParser) dom = (new DOMParser()).parseFromString(xml, "text/xml");
    else if (window.ActiveXObject) {
        dom = new ActiveXObject('Microsoft.XMLDOM');
        dom.async = false;
        if (!dom.loadXML(xml)) throw dom.parseError.reason + " " + dom.parseError.srcText;
    }
    else throw new Error("cannot parse xml string!");

    function parseNode(xmlNode, result) {
        if (xmlNode.nodeName == "#text") {
            let v = xmlNode.nodeValue;
            if (v.trim()) result['#text'] = v;
            return;
        }

        let jsonNode = {},
            existing = result[xmlNode.nodeName];
        if (existing) {
            if (!Array.isArray(existing)) result[xmlNode.nodeName] = [existing, jsonNode];
            else result[xmlNode.nodeName].push(jsonNode);
        }
        else {
            if (arrayTags && arrayTags.indexOf(xmlNode.nodeName) != -1) result[xmlNode.nodeName] = [jsonNode];
            else result[xmlNode.nodeName] = jsonNode;
        }

        if (xmlNode.attributes) for (let attribute of xmlNode.attributes) jsonNode[attribute.nodeName] = attribute.nodeValue;

        for (let node of xmlNode.childNodes) parseNode(node, jsonNode);
    }

    let result = {};
    for (let node of dom.childNodes) parseNode(node, result);

    return result;
}

function isArray(myArray) {
  // checks for null and undefined
  if (myArray == null) {
    return false;
  }
  return Symbol.iterator in Object(myArray);
}

function get_brew_info(xml){
	let recipe = parseXml(xml);
	//show main info
    document.getElementById("STYLE").textContent = recipe.RECIPES.RECIPE.STYLE.NAME["#text"];
    document.getElementById("NAME").textContent = recipe.RECIPES.RECIPE.NAME["#text"];
    document.getElementById("TYPE").textContent = recipe.RECIPES.RECIPE.TYPE["#text"];
    document.getElementById("BATCH_SIZE").textContent = recipe.RECIPES.RECIPE.BATCH_SIZE["#text"] + " л.";
    document.getElementById("BOIL_SIZE").textContent = recipe.RECIPES.RECIPE.BOIL_SIZE["#text"] + " л.";
    document.getElementById("BOIL_TIME").textContent = recipe.RECIPES.RECIPE.BOIL_TIME["#text"] + " мин.";
    if (typeof recipe.RECIPES.RECIPE.PRIMARY_TEMP != "undefined") document.getElementById("PRIMARY_TEMP").innerHTML = recipe.RECIPES.RECIPE.PRIMARY_TEMP["#text"] + " &deg;С";
    else document.getElementById("PRIMARY_TEMP").innerHTML = " Нет в рецепте";
    
    //show ingredients
    var dl = document.createElement("div");
    dl.className = "prgline";
  
    var dl1 = document.createElement("div");
    dl1.className = "ingredients";
    var type = document.createElement("label");
    type.textContent = "Тип";
    dl1.appendChild(type);
    var name = document.createElement("label");
    name.textContent = "Название";
    dl1.appendChild(name);
    var amount = document.createElement("label");
    amount.textContent = "Количество";
    dl1.appendChild(amount);
    dl.appendChild(dl1);
    
    var ingr = document.getElementById("ingredients");
    ingr.innerHTML = "";
    ingr.appendChild(dl);

    var FERMENTABLE = [];
    var A = [];
    A = recipe.RECIPES.RECIPE.FERMENTABLES.FERMENTABLE;
    if (Array.isArray(A)){
       FERMENTABLE = recipe.RECIPES.RECIPE.FERMENTABLES.FERMENTABLE;
    } else {FERMENTABLE.push(recipe.RECIPES.RECIPE.FERMENTABLES.FERMENTABLE) }
    //grain
    for (let ferm of FERMENTABLE){
      var dl1 = document.createElement("div");
      dl1.className = "ingredients";
  
      var type = document.createElement("label");
      type.textContent = "Солод";
      dl1.appendChild(type);
      var name = document.createElement("label");
      name.textContent = ferm.NAME["#text"];
      dl1.appendChild(name);
      var amount = document.createElement("label");
      amount.textContent = ferm.AMOUNT["#text"];
      dl1.appendChild(amount);
    
      dl.appendChild(dl1);
    }

    //hop
    var HOP = [];
    A = recipe.RECIPES.RECIPE.HOPS.HOP;
    if (Array.isArray(A)){
       HOP = recipe.RECIPES.RECIPE.HOPS.HOP;
    } else {HOP.push(recipe.RECIPES.RECIPE.HOPS.HOP) }
    for (let hop of HOP){
      var dl1 = document.createElement("div");
      dl1.className = "ingredients";
  
      var type = document.createElement("label");
      type.textContent = "Хмель";
      dl1.appendChild(type);
      var name = document.createElement("label");
      name.textContent = hop.NAME["#text"];
      dl1.appendChild(name);
      var amount = document.createElement("label");
      amount.textContent = hop.AMOUNT["#text"];
      dl1.appendChild(amount);
    
      dl.appendChild(dl1);
    }
    
    //yeast
    var YEAST = [];
    A = recipe.RECIPES.RECIPE.YEASTS.YEAST;
    if (Array.isArray(A)){
       YEAST = recipe.RECIPES.RECIPE.YEASTSYEAST;
    } else {YEAST.push(recipe.RECIPES.RECIPE.YEASTS.YEAST) }
    for (let yeast of YEAST){
      var dl1 = document.createElement("div");
      dl1.className = "ingredients";
  
      var type = document.createElement("label");
      type.textContent = "Дрожжи";
      dl1.appendChild(type);
      var name = document.createElement("label");
      name.textContent = yeast.NAME["#text"];
      dl1.appendChild(name);
      var amount = document.createElement("label");
      amount.textContent = yeast.AMOUNT["#text"];
      dl1.appendChild(amount);

      dl.appendChild(dl1);
    }
}
</script>
</head>
<body>
<form action='none' onsubmit='return false' name="mainform" id="mainform">
<h1>
<div class="message-box" style="display: none;" id="message"></div>
Samovar v. <span id='version'>%v%</span>
</h1>

<div class="text">Программа затирания</div>

<div style="margin: 0 auto; width: 200px;">
<label for="fileToLoad" class="button custom-file-upload">
    <i class="fa fa-cloud-upload"></i>Загрузить программу
</label>
<input type="file" id="fileToLoad" accept="application/xml" onchange="loadFile(this.files[0])" class="button"/>
</div>
</div>

<div class="tabcontent" style="display: block;border-top: solid;border-top-width: 1px;border-top-color: rgb(204, 204, 204);">
<div id="brew">
<div class="container_row" style="border: 1px dashed #bbb; margin-bottom: 1em;">
<div className="specs">
<div>
<label>Стиль:</label><label className="specs" id="STYLE"></label>
</div>
<div>
<label>Сорт:</label><label className="specs" id="NAME"></label>
</div>
<div>
<label>Тип:</label><label className="specs" id="TYPE"></label>
</div>
<div>
<label>Выход:</label><label className="specs" id="BATCH_SIZE"></label>
</div>
<div>
<label>Объем котла:</label><label className="specs" id="BOIL_SIZE"></label>
</div>
<div>
<label>Температура брожения:</label><label className="specs" id="PRIMARY_TEMP"></label>
</div>
<div>
<label>Время кипения:</label><label className="specs" id="BOIL_TIME"></label>
</div>
</div>
</div>

<div className="ingredients">
<label>Ингредиенты:</label>
<div class="container_row" style="border: 1px dashed #bbb; margin-bottom: 1em;">
<div id="ingredients">
</div>
</div>
</div>

</div>
</div>
</form>
</body>