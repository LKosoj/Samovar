<html>
<head>
<meta charset='utf-8'>
<meta http-equiv="Cache-Control" content="no-cache">

<link rel="shortcut icon" href="favicon.ico" type="image/x-icon"/>
<link rel="stylesheet" href="style.css">
<title>Самовар</title>

<script>

var is_program = false;
var program = "";

/**
   * Корректировка округления десятичных дробей.
   *
   * @param {String}  type  Тип корректировки.
   * @param {Number}  value Число.
   * @param {Integer} exp   Показатель степени (десятичный логарифм основания корректировки).
   * @returns {Number} Скорректированное значение.
   */
  function decimalAdjust(type, value, exp) {
    // Если степень не определена, либо равна нулю...
    if (typeof exp === 'undefined' || +exp === 0) {
      return Math[type](value);
    }
    value = +value;
    exp = +exp;
    // Если значение не является числом, либо степень не является целым числом...
    if (isNaN(value) || !(typeof exp === 'number' && exp % 1 === 0)) {
      return NaN;
    }
    // Сдвиг разрядов
    value = value.toString().split('e');
    value = Math[type](+(value[0] + 'e' + (value[1] ? (+value[1] - exp) : -exp)));
    // Обратный сдвиг
    value = value.toString().split('e');
    return +(value[0] + 'e' + (value[1] ? (+value[1] + exp) : exp));
  }
  
function compare( a, b ) {
  a1 = decimalAdjust("round",get_object_value(a.TIME));
  b1 = decimalAdjust("round",get_object_value(b.TIME));
  if (a1 < b1){
    return 1;
  }
  if (a1 > b1){
    return -1;
  }
  return 0;
}

function loadBeerXML(e) {
	var file = e;
	var type = "";
	
	var readtype = new FileReader();
	readtype.onload = function () {
	    if (readtype.result.indexOf("namerecipe") > 0){
		        type = "bm";
			var file = e;
			var reader = new FileReader();
			reader.onload = function () {
    		   get_brewmate_info(reader.result);
			};
			reader.readAsText(file, "windows-1251");
	    } else {
	        type = "bx";
			var file = e;
    		var reader = new FileReader();
			reader.onload = function () {
       			get_brew_info(reader.result);
			};
			reader.readAsText(file, "UTF-8");
	    }
	};
	readtype.readAsText(file, "UTF-8");
}

function parseXml(xml, arrayTags) {
    let dom = null;
    if (window.DOMParser) dom = (new DOMParser()).parseFromString(xml, "text/xml");
    else if (window.ActiveXObject) {
        dom = new ActiveXObject('Microsoft.XMLDOM');
        dom.async = false;
        if (!dom.loadXML(xml)) throw dom.parseError.reason + " " + dom.parseError.srcText;
    }
    else throw new Error("cannot parse xml string!");

    function parseNode(xmlNode, result) {
        if (xmlNode.nodeName == "#text") {
            let v = xmlNode.nodeValue;
            if (v.trim()) result['#text'] = v;
            return;
        }

        let jsonNode = {},
            existing = result[xmlNode.nodeName];
        if (existing) {
            if (!Array.isArray(existing)) result[xmlNode.nodeName] = [existing, jsonNode];
            else result[xmlNode.nodeName].push(jsonNode);
        }
        else {
            if (arrayTags && arrayTags.indexOf(xmlNode.nodeName) != -1) result[xmlNode.nodeName] = [jsonNode];
            else result[xmlNode.nodeName] = jsonNode;
        }

        if (xmlNode.attributes) for (let attribute of xmlNode.attributes) jsonNode[attribute.nodeName] = attribute.nodeValue;

        for (let node of xmlNode.childNodes) parseNode(node, jsonNode);
    }

    let result = {};
    for (let node of dom.childNodes) parseNode(node, result);

    return result;
}

function isArray(myArray) {
  // checks for null and undefined
  if (myArray == null) {
    return false;
  }
  return Symbol.iterator in Object(myArray);
}

function isNumeric(str) {
  if (typeof str != "string") return false // we only process strings!  
  return !isNaN(str) && // use type coercion to parse the _entirety_ of the string (`parseFloat` alone does not do this)...
         !isNaN(parseFloat(str)) // ...and ensure strings of whitespace fail
}

function get_object_value(Obj, str = "", exp = -2){
    if (typeof Obj != "undefined") {
      if (isNumeric(Obj["#text"])) return (decimalAdjust("round",parseFloat(Obj["#text"]),exp)) + str;
      else if (typeof Obj["#text"] != "undefined") return Obj["#text"] + str;
            else return "Нет в рецепте";
    }
    else return "Нет в рецепте";
}

function check_value(val, type){
  if (val != "Нет в рецепте") return val;
  if (type == "bt") return 60;
  if (type == "pt") return 20;
}

function get_brew_info(xml){
	let recipe = parseXml(xml);
	get_recipe(recipe);
}

function get_brewmate_info(xml){
	let recipe = parseXml(xml);
	//show main info
	recipe.RECIPES = Object.create(null);
	recipe.RECIPES.RECIPE = Object.create(null);
	recipe.RECIPES.RECIPE.STYLE = Object.create(null);
	recipe.RECIPES.RECIPE.STYLE.NAME = recipe.recipe.style;
	recipe.RECIPES.RECIPE.NAME = recipe.recipe.namerecipe;
	recipe.RECIPES.RECIPE.BATCH_SIZE = recipe.recipe.part;
	recipe.RECIPES.RECIPE.BOIL_TIME = recipe.recipe.timeboil;
	recipe.RECIPES.RECIPE.FERMENTABLE_TIME = recipe.recipe.timebro;
	//recipe.RECIPES.RECIPE.NOTES = recipe.recipe.comms.comm.lin;
	
	recipe.RECIPES.RECIPE.YEASTS = Object.create(null);
	recipe.RECIPES.RECIPE.YEASTS.YEAST = Object.create(null);
	recipe.RECIPES.RECIPE.YEASTS.YEAST.NAME = recipe.recipe.yeast;
	
	recipe.RECIPES.RECIPE.FERMENTABLES = Object.create(null);
	recipe.RECIPES.RECIPE.FERMENTABLES.FERMENTABLE = recipe.recipe.grains.grain;

    var FERMENTABLE = [];
    if (Array.isArray(recipe.RECIPES.RECIPE.FERMENTABLES.FERMENTABLE)){
       FERMENTABLE = recipe.RECIPES.RECIPE.FERMENTABLES.FERMENTABLE;
    } else {FERMENTABLE.push(recipe.RECIPES.RECIPE.FERMENTABLES.FERMENTABLE) }
    
    for (let ferm of FERMENTABLE){
    	ferm.NAME = ferm.grainname;
    	ferm.AMOUNT = ferm.grainkg;
	}

    recipe.RECIPES.RECIPE.HOPS = Object.create(null);
    recipe.RECIPES.RECIPE.HOPS.HOP = recipe.recipe.hops.hop;
    
    var HOP = [];
    if (Array.isArray(recipe.RECIPES.RECIPE.HOPS.HOP)){
       HOP = recipe.RECIPES.RECIPE.HOPS.HOP;
    } else {HOP.push(recipe.RECIPES.RECIPE.HOPS.HOP) }
    for (let hop of HOP){
		hop.NAME = hop.hopname;
		hop.AMOUNT = hop.hopgr;
		hop.TIME = hop.hoptime;
	}

	recipe.RECIPES.RECIPE.MASH = Object.create(null);
	recipe.RECIPES.RECIPE.MASH.MASH_STEPS = Object.create(null);
	recipe.RECIPES.RECIPE.MASH.MASH_STEPS.MASH_STEP = recipe.recipe.zatirs.zatir;
	
    var MASH = [];
    if (Array.isArray(recipe.RECIPES.RECIPE.MASH.MASH_STEPS.MASH_STEP)){
       MASH = recipe.RECIPES.RECIPE.MASH.MASH_STEPS.MASH_STEP;
    } else {MASH.push(recipe.RECIPES.RECIPE.MASH.MASH_STEPS.MASH_STEP) }
    for (let mash of MASH){
    	mash.STEP_TEMP = mash.zatirgr;
    	mash.STEP_TIME = mash.zatirtime;
    }
	
	recipe.RECIPES.RECIPE.MISCS = Object.create(null);
	recipe.RECIPES.RECIPE.MISCS.MISC = recipe.recipe.misc;
	
    var MISC = [];
    if (Array.isArray(recipe.RECIPES.RECIPE.MISCS.MISC)){
       MISC = recipe.RECIPES.RECIPE.MISCS.MISC;
    } else if (!(recipe.RECIPES.RECIPE.MISCS.MISC === undefined)) {MISC.push(recipe.RECIPES.RECIPE.MISCS.MISC) }
    for (let misc of MISC){
		misc.TYPE = misc.misctype;
		misc.NAME = misc.miscname;
		misc.AMOUNT = misc.miscgr;
	}
		
	get_recipe(recipe);
}

function get_recipe(recipe){
    is_program = false;
    program = "M;45.00;0;1^-1^2^3;0\n";
	//show main info
    document.getElementById("STYLE").textContent = get_object_value(recipe.RECIPES.RECIPE.STYLE.NAME);
    document.getElementById("NAME").textContent = get_object_value(recipe.RECIPES.RECIPE.NAME);
    document.getElementById("TYPE").textContent = get_object_value(recipe.RECIPES.RECIPE.TYPE);
    document.getElementById("BATCH_SIZE").textContent = get_object_value(recipe.RECIPES.RECIPE.BATCH_SIZE, " л.");
    document.getElementById("BOIL_SIZE").textContent = get_object_value(recipe.RECIPES.RECIPE.BOIL_SIZE, " л.");
    document.getElementById("BOIL_TIME").textContent = get_object_value(recipe.RECIPES.RECIPE.BOIL_TIME, " мин.");
    document.getElementById("NOTES").innerHTML = get_object_value(recipe.RECIPES.RECIPE.NOTES);
    document.getElementById("PRIMARY_TEMP").innerHTML = get_object_value(recipe.RECIPES.RECIPE.PRIMARY_TEMP, " &deg;С");
    document.getElementById("FERMENTABLE_TIME").innerHTML = get_object_value(recipe.RECIPES.RECIPE.FERMENTABLE_TIME, " дней");

        
    //show ingredients
    var dl = document.createElement("div");
  
    var dl1 = document.createElement("div");
    dl1.className = "ingredients";
    var type = document.createElement("label");
    type.textContent = "Тип";
    type.className = "ingType";
    dl1.appendChild(type);
    var name = document.createElement("label");
    name.textContent = "Название";
    name.className = "ingName";
    name.style = "text-align: center;";
    dl1.appendChild(name);
    var amount = document.createElement("label");
    amount.textContent = "Количество";
    amount.className = "ingAmount";
    dl1.appendChild(amount);
    dl.appendChild(dl1);
    
    var ingr = document.getElementById("ingredients");
    ingr.innerHTML = "";
    ingr.appendChild(dl);

    var FERMENTABLE = [];
    if (Array.isArray(recipe.RECIPES.RECIPE.FERMENTABLES.FERMENTABLE)){
       FERMENTABLE = recipe.RECIPES.RECIPE.FERMENTABLES.FERMENTABLE;
    } else {FERMENTABLE.push(recipe.RECIPES.RECIPE.FERMENTABLES.FERMENTABLE) }
    
    //grain
    for (let ferm of FERMENTABLE){
      var dl1 = document.createElement("div");
      dl1.className = "ingredients";
  
      var type = document.createElement("label");
      if (get_object_value(ferm.TYPE) == "Adjunct") type.textContent = "Добавка";
      else type.textContent = "Солод";
      type.className = "ingType";
      dl1.appendChild(type);
      var name = document.createElement("label");
      name.textContent = get_object_value(ferm.NAME);
      name.className = "ingName";
      dl1.appendChild(name);
      var amount = document.createElement("label");
      amount.textContent = get_object_value(ferm.AMOUNT,"",-2);
      amount.className = "ingAmount";
      dl1.appendChild(amount);
    
      dl.appendChild(dl1);
    }

    //hop
    var HOP = [];
    if (Array.isArray(recipe.RECIPES.RECIPE.HOPS.HOP)){
       HOP = recipe.RECIPES.RECIPE.HOPS.HOP;
    } else {HOP.push(recipe.RECIPES.RECIPE.HOPS.HOP) }
    for (let hop of HOP){
      var dl1 = document.createElement("div");
      dl1.className = "ingredients";
      var type = document.createElement("label");
      type.textContent = "Хмель";
      type.className = "ingType";
      dl1.appendChild(type);
      var name = document.createElement("label");
      name.textContent = get_object_value(hop.NAME);
      name.className = "ingName";
      dl1.appendChild(name);
      var amount = document.createElement("label");
      amount.textContent = get_object_value(hop.AMOUNT,"",-4);
      amount.className = "ingAmount";
      dl1.appendChild(amount);
    
      dl.appendChild(dl1);
    }
    
    //yeast
    var YEAST = [];
    if (Array.isArray(recipe.RECIPES.RECIPE.YEASTS.YEAST)){
       YEAST = recipe.RECIPES.RECIPE.YEASTS.YEAST;
    } else {YEAST.push(recipe.RECIPES.RECIPE.YEASTS.YEAST) }
    for (let yeast of YEAST){
      var dl1 = document.createElement("div");
      dl1.className = "ingredients";
  
      var type = document.createElement("label");
      type.textContent = "Дрожжи";
      type.className = "ingType";
      dl1.appendChild(type);
      var name = document.createElement("label");
      name.textContent = get_object_value(yeast.NAME)
      name.className = "ingName";
      dl1.appendChild(name);
      var amount = document.createElement("label");
      amount.textContent = get_object_value(yeast.AMOUNT,"",-2);
      amount.className = "ingAmount";
      dl1.appendChild(amount);

      dl.appendChild(dl1);
    }
    
    //misc
    var MISC = [];
    if (Array.isArray(recipe.RECIPES.RECIPE.MISCS.MISC)){
       MISC = recipe.RECIPES.RECIPE.MISCS.MISC;
    } else if (!(recipe.RECIPES.RECIPE.MISCS.MISC === undefined)) {MISC.push(recipe.RECIPES.RECIPE.MISCS.MISC) }
    for (let misc of MISC){
      if (get_object_value(misc.TYPE) == "Flavor" || get_object_value(misc.TYPE) == "Fining"){
        var dl1 = document.createElement("div");
        dl1.className = "ingredients";
  
        var type = document.createElement("label");
        if (get_object_value(misc.TYPE) == "Flavor") type.textContent = "Специи";
        else if (get_object_value(misc.TYPE) == "Fining") type.textContent = "Очистка";
        type.className = "ingType";
        dl1.appendChild(type);
        var name = document.createElement("label");
        name.textContent = get_object_value(misc.NAME)
        name.className = "ingName";
        dl1.appendChild(name);
        var amount = document.createElement("label");
        amount.textContent = get_object_value(misc.AMOUNT,"",-4);
        amount.className = "ingAmount";
        dl1.appendChild(amount);

        dl.appendChild(dl1);
      }
    }
    
    //show mash step
    var dl = document.createElement("div");
    var dl1 = document.createElement("div");
    dl1.className = "ingredients";
  
    var name = document.createElement("label");
    name.textContent = "Название";
    name.className = "mashName";
    dl1.appendChild(name);
    var descr = document.createElement("label");
    descr.textContent = "Тип";
    descr.className = "mashType";
    dl1.appendChild(descr);
    var mtemp = document.createElement("label");
    mtemp.textContent = "Температура";
    mtemp.className = "mashTemp";
    dl1.appendChild(mtemp);
    var mtime = document.createElement("label");
    mtime.textContent = "Время";
    mtime.className = "mashTime";
    dl1.appendChild(mtime);
    dl.appendChild(dl1);
    
    //mash
    var MASH = [];
    if (Array.isArray(recipe.RECIPES.RECIPE.MASH.MASH_STEPS.MASH_STEP)){
       MASH = recipe.RECIPES.RECIPE.MASH.MASH_STEPS.MASH_STEP;
    } else {MASH.push(recipe.RECIPES.RECIPE.MASH.MASH_STEPS.MASH_STEP) }
    for (let mash of MASH){
	  var dl1 = document.createElement("div");
      dl1.className = "ingredients";
  
      var name = document.createElement("label");
      name.textContent = get_object_value(mash.NAME)
      name.className = "mashName";
      dl1.appendChild(name);
      var type = document.createElement("label");
      type.textContent = get_object_value(mash.TYPE)
      type.className = "mashType";
      dl1.appendChild(type);
      var step_temp = document.createElement("label");
      step_temp.textContent = get_object_value(mash.STEP_TEMP)
      step_temp.className = "mashTemp";
      dl1.appendChild(step_temp);
      var step_time = document.createElement("label");
      step_time.textContent = get_object_value(mash.STEP_TIME)
      step_time.className = "mashTemp";
      dl1.appendChild(step_time);

      dl.appendChild(dl1);
      program = program + "P;" + step_temp.textContent + ";" + step_time.textContent + ";1^-1^2^3" + ";0\n";
    }

    var ingr = document.getElementById("mash");
    ingr.innerHTML = "";
    ingr.appendChild(dl);
    
    pt = check_value(get_object_value(recipe.RECIPES.RECIPE.PRIMARY_TEMP), "pt");

    bth = decimalAdjust("round",check_value(get_object_value(recipe.RECIPES.RECIPE.BOIL_TIME), "bt"));
    t = 0;
    HOP.sort(compare);

    for (let hop of HOP){
        t = decimalAdjust("round",get_object_value(hop.TIME));
        if ((bth - t) <= 0) {
            program = program + "B;0.00;1;1^-1^2^3;0\n";
        }
        else {
            program = program + "B;0.00;" + (bth - t) + ";1^-1^2^3;0\n";
        	bth = t;
        }
    }

    if (bth > 0) {
          program = program + "B;0.00;" + bth + ";1^-1^2^3;0\n";
    }

    program = program + "C;" + pt + ";0;1^-1^2^3\nF;" + pt + ";0;1^-1^2^3;0";
    is_program = true;
}

function set_program(){
if (!is_program) {
  alert("Error");
  return;
}
alert(program);
document.getElementById("WProgram").value = program;

var server = '/program';
request = new XMLHttpRequest();
request.onreadystatechange = function() {
if (this.readyState == 4 && this.status == 200) {
var myObj = this.responseText;
if (myObj != "OK") {
  document.getElementById('WProgram').value = myObj;
  alert( "Ok" );
}
}
};
request.open('POST', server, false);
let formData = new FormData(document.forms.mainform);
request.send(formData);
if(request.status != 200) {
alert( request.status + ': ' + request.statusText );
}
return 0;
};

</script>
</head>
<body>
<form action='none' onsubmit='return false' name="mainform" id="mainform">
<h1>
<div class="message-box" style="display: none;" id="message"></div>
Samovar v. <span id='version'>%v%</span>
</h1>

<div class="text">Программа затирания</div>

<div style="margin: 20 auto; width: 200px;">
<label for="fileToLoad" class="button custom-file-upload">
    <i class="fa fa-cloud-upload"></i>Загрузить рецепт
</label>
<input type="file" id="fileToLoad" accept="application/xml" onchange="loadBeerXML(this.files[0])" class="button"/>
</div>

<div class="tabcontent" style="display: block;border-top: solid;border-top-width: 1px;border-top-color: rgb(204, 204, 204);">
<div id="brew">
<label style="font-size: 20px; font-weight: 600;">Описание рецепта:</label>
<div class="container_row" style="border: 1px dashed #bbb; margin-bottom: 1em;">
<div class="specs">
<div>
<label>Стиль: </label><label class="specs" id="STYLE"></label>
</div>
<div>
<label>Сорт: </label><label class="specs" id="NAME"></label>
</div>
<div>
<label>Тип: </label><label class="specs" id="TYPE"></label>
</div>
<div>
<label>Выход: </label><label class="specs" id="BATCH_SIZE"></label>
</div>
<div>
<label>Объем кипения: </label><label class="specs" id="BOIL_SIZE"></label>
</div>
<div>
<label>Температура брожения: </label><label class="specs" id="PRIMARY_TEMP"></label>
</div>
<div>
<label>Время кипения: </label><label class="specs" id="BOIL_TIME"></label>
</div>
<div>
<label>Время брожения: </label><label class="specs" id="FERMENTABLE_TIME"></label>
</div>
<div>
<label>Заметки: </label><label class="specs" id="NOTES"></label>
</div>
</div>
</div>

<div className="ingredients">
<label style="font-size: 20px; font-weight: 600;">Ингредиенты:</label>
<div class="container_row" style="border: 1px dashed #bbb; margin-bottom: 1em;">
<div id="ingredients">
</div>
</div>
</div>

<div className="ingredients">
<label style="font-size: 20px; font-weight: 600;">Температурные паузы:</label>
<div class="container_row" style="border: 1px dashed #bbb; margin-bottom: 1em;">
<div id="mash">
</div>
</div>
</div>

<div style="margin: 0 auto; width: 450px;">
<input id='setprogram' type='button' name='setprogram' value='Установить программу' onclick='set_program();' class="button">
<input id='return' type='button' name='return' value='На главную' onclick='javascript:location.href="index.htm"' class="button">
</div>


</div>
</div>
<textarea cols="40" rows="7" id='WProgram' name='WProgram' style="visibility: hidden;"></textarea>
</form>
</body>
</html>