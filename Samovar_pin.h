#ifndef __SAMOVAR_PIN_H_
#define __SAMOVAR_PIN_H_

// Автоматическое определение типа платы
#if defined(ARDUINO_ESP32S3_DEV)
#undef BOARD
#define BOARD ESP32S3
#elif defined(ARDUINO_ESP32_LILYGO_T_RELAY)
#undef BOARD
#define BOARD LILYGO
#elif defined(ARDUINO_ESP32_DEV)
#undef BOARD
#define BOARD DEVKIT
#endif

// Если плата не определена автоматически, используем DEVKIT по умолчанию
#if not defined(BOARD)
#define BOARD DEVKIT
#endif

//**************************************************************************************************************
// Распиновка
//**************************************************************************************************************

//**************************************************************************************************************
// Пины для BME680, BMP180, BMP280
//#define BME_SCK 22   //SCL
//#define BME_MISO --  //SDO
//#define BME_MOSI 21  //SDA
//#define BME_CS --    //CS
//#define SEALEVELPRESSURE_HPA (1013.25)
//**************************************************************************************************************


//**************************************************************************************************************
//**************************************************************************************************************
//**ESP32S3**
//**в Инструменты-Плата выбрать ESP32S3 Dev module, 8Mb, 3MB APP/1.5MB FS
//**************************************************************************************************************
//**************************************************************************************************************
#if BOARD == ESP32S3
//#pragma message ("ESP32S3")
#define ENC_CLK 21 //S2
#define ENC_DT 47  //S1
#define ENC_SW 48  //KEY

#define STEPPER_STEP 10
#define STEPPER_DIR 11
#define STEPPER_EN 12

#define RELE_CHANNEL1 4             //используется для пускателя, который включает нагреватель
#define RELE_CHANNEL2 5             //в режиме "Пиво" используется для включения мешалки
#define RELE_CHANNEL3 6             //используется для клапана, открывающего/закрывающего воду охлаждения
#define RELE_CHANNEL4 7             //если не используется регулятор с управлением, выход используется для управления разгоном

#define ONE_WIRE_BUS 35

#define SERVO_PIN 15

#define BTN_PIN 16

#define LUA_PIN 1

#define ALARM_BTN_PIN 2

#define WATERSENSOR_PIN 38

#define WHEAD_LEVEL_SENSOR_PIN 37

#define LCD_SDA 13
#define LCD_SCL 14

#define RXD2 18
#define TXD2 17

#define WATER_PUMP_PIN 36

#define BZZ_PIN 35
//**************************************************************************************************************
//**************************************************************************************************************
//**ESP32S3**
//**************************************************************************************************************
//**************************************************************************************************************


//**************************************************************************************************************
//**************************************************************************************************************
//**LILYGO T-RELAY 4**
//**в Инструменты-плата выбрать ESP32 Dev module
//**************************************************************************************************************
//**************************************************************************************************************
#elif BOARD == LILYGO
//#pragma message ("LILYGO")
#define ENC_CLK 35 //S2
#define ENC_DT 39  //S1
#define ENC_SW 36  //KEY

#define STEPPER_STEP 22
#define STEPPER_DIR 23
#define STEPPER_EN 26

#define RELE_CHANNEL1 21             //используется для пускателя, который включает нагреватель
#define RELE_CHANNEL2 19             //в режиме "Пиво" используется для включения мешалки
#define RELE_CHANNEL3 18             //используется для клапана, открывающего/закрывающего воду охлаждения
#define RELE_CHANNEL4 5              //если не используется регулятор с управлением, выход используется для управления разгоном

#define ONE_WIRE_BUS 27

#define SERVO_PIN 13

#define BTN_PIN 34

#define LUA_PIN 12

#define ALARM_BTN_PIN -1
#undef USE_ALARM_BTN

#define WATERSENSOR_PIN 14

#define WHEAD_LEVEL_SENSOR_PIN 15

#define LCD_SDA 33
#define LCD_SCL 32

#define RXD2 25
#define TXD2 4

#define WATER_PUMP_PIN 2

#define BZZ_PIN 0
//**************************************************************************************************************
//**************************************************************************************************************
//**LILYGO T-RELAY 4**
//**************************************************************************************************************
//**************************************************************************************************************


//**************************************************************************************************************
//**************************************************************************************************************
//**ESP32_DEVKIT V1**
//**в Инструменты-плата выбрать ESP32 DEVKIT V1
//**************************************************************************************************************
//**************************************************************************************************************
#elif BOARD == DEVKIT
//#pragma message ("ESP32_DEVKIT V1")

//**************************************************************************************************************
// Пины для Encoder
#ifndef ENC_CLK
#define ENC_CLK 19 //S2
#endif
#ifndef ENC_DT
#define ENC_DT 18  //S1
#endif
#ifndef ENC_SW
#define ENC_SW 23  //KEY
#endif
//**************************************************************************************************************

//**************************************************************************************************************
// Пины для шагового двигателя
#define STEPPER_STEP 26
#define STEPPER_DIR 32
#define STEPPER_EN 33
//**************************************************************************************************************

//**************************************************************************************************************
// Пины для релейного модуля
#define RELE_CHANNEL1 2             //используется для пускателя, который включает нагреватель
#define RELE_CHANNEL2 15 //было 34  //в режиме "Пиво" используется для включения мешалки
#define RELE_CHANNEL3 14            //используется для клапана, открывающего/закрывающего воду охлаждения
#define RELE_CHANNEL4 13            //если не используется регулятор с управлением, выход используется для управления разгоном
//**************************************************************************************************************

//**************************************************************************************************************
// Пин для DS1820
#define ONE_WIRE_BUS 5
//**************************************************************************************************************

//**************************************************************************************************************
// Пины для сервопривода
#define SERVO_PIN 25
//**************************************************************************************************************

//**************************************************************************************************************
// Пин кнопки - не обязательно, но удобно
#ifdef USE_BTN
#define BTN_PIN 39
#endif
//**************************************************************************************************************

//**************************************************************************************************************
// Пин для использования в Lua-скриптах
#define LUA_PIN 34
//**************************************************************************************************************

//**************************************************************************************************************
// Пин аварийной кнопки
#ifdef USE_ALARM_BTN
#define ALARM_BTN_PIN 35
#endif
//**************************************************************************************************************

//**************************************************************************************************************
// Пины сенсора охлаждения воды - используется для отключения нагрева в случае отсутствия охлаждения. Не обязательно, но безопасно
#define WATERSENSOR_PIN 36
//**************************************************************************************************************

//**************************************************************************************************************
// Пины сенсора уровня флегмы в узле отбора - используется для уменьшения нагрева при начале захлебывания колонны. Не обязательно, но безопасно
#define WHEAD_LEVEL_SENSOR_PIN 27
//**************************************************************************************************************

//**************************************************************************************************************
// Установки для экрана: пины, адрес, количество колонок и строк
#define LCD_SDA 21
#define LCD_SCL 22

//**************************************************************************************************************

//**************************************************************************************************************
// Пины UART2 для взаимодействия с регулятором напряжения
#define RXD2 16
#define TXD2 17
//**************************************************************************************************************

//**************************************************************************************************************
// Пин для управления насосом по ШИМ
#define WATER_PUMP_PIN 4
//**************************************************************************************************************

//**************************************************************************************************************
// Пин для Buzzer
#define BZZ_PIN 12
//**************************************************************************************************************

//**************************************************************************************************************
//**************************************************************************************************************
//**ESP32_DEVKIT V1**
//**************************************************************************************************************
//**************************************************************************************************************

#else
#pragma message ("PLATFORM NOT DEFINED")
#error
#endif

#define STEPPER_STEPS 400 //количество шагов, 200 x MS
#define STEPPER_STEP_ML 1020 //количество шагов на 1 мл жидкости для драйвера с шагами 1/2
#define STEPPER_MAX_SPEED 8000

#define LCD_ADDRESS 0x27
#define LCD_COLUMNS 20
#define LCD_ROWS 4

#define WHLS_ALARM_TIME 3 //Секунд, через сколько сработает тревога по уровню флегмы

#ifndef WF_CALIBRATION
#define WF_CALIBRATION 98 //Значение на датчике F=98*Q(L/min)
#endif
#define WF_ALARM_COUNT 20 //Секунд до отключения нагрева, если в течении этого времени не будет подана вода охлаждения

//Максимальный угол сервопривода
#define SERVO_ANGLE 180
// Количество емкостей. (0 используется всегда). Для расчета позиции серво считаем угол поворота между емкостями
// равным 180 / CAPACITY_NUM
#define CAPACITY_NUM 10

//**************************************************************************************************************
//Температура воды, которую будет поддерживать ШИМ-регулятор. Так же, если при выключении питания температура воды будет меньше TARGET_WATER_TEMP - 15 отключится подача воды
#define TARGET_WATER_TEMP 48
//**************************************************************************************************************

#endif
